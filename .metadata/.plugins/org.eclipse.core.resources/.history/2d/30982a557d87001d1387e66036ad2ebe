package newapp;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Scanner;

public class EmployeeOps {

	private DBHandler db;
	
	public EmployeeOps() {
		try {
			db = new DBHandler();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	public Integer getIdFromUser() {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter employee-id (integer): ");
		int empId = sc.nextInt();
		return empId;
	}
	
	public Employee getUserInput() {
			Scanner sc = new Scanner(System.in);
			System.out.println("Enter employee name (String): ");
			String eName = sc.next();
			System.out.println("Enter employee salary (Integer): ");
			double eSalary = sc.nextDouble();
			
			Employee emp = new Employee();
			emp.setName(eName);
			emp.setSalary(eSalary);
			
			return emp;
	}
	
	public Employee save(Employee employee) throws SQLException {
		String q = "insert into emp values('"+employee.getName()+"', "+employee.getSalary()+")";
		Statement statement = db.createStatement();
		int id = statement.executeUpdate(q,Statement.RETURN_GENERATED_KEYS);
		employee.setEmpId(id);
		db.closeResources();
		return employee;
	}
	
	public Employee update(Employee employee) throws SQLException {
		String q = "update emp set ename=?,esalary=? where empid=?";
		PreparedStatement preparedstatement = db.prepareStatementWithKey(q);
		preparedstatement.setString(1, employee.getName());
		preparedstatement.setDouble(2, employee.getSalary());
		preparedstatement.setInt(3,employee.getEmpId());
		preparedstatement.executeUpdate();
		db.closeResources();
		return employee;
	}
	
	public void delete(Integer id) throws SQLException {
		String query = "delete from emp where empid=?";
		PreparedStatement preparestatement = db.prepareStatementWithKey(query);
		preparestatement.setInt(1,id);
		preparestatement.executeUpdate();
		db.closeResources();
	}
	
	public Employee retrieve(Integer id) {
		// TODO
		return null;
	}
	
	public List<Employee> list(){
		// TODO
		return null;
	}
}
